name: push-snapshots-to-branch
on:
  workflow_run:
    workflows: [update-snapshots]
    types:
      - completed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  commit-and-push:
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      # Warning: we are checking out an untrusted source at this point in order
      # to push to the head pull request. Code from this checkout must not be
      # used in any of the following steps.
      - uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.head_ref }}
      - name: 'Download artifact'
        uses: actions/github-script@v6
        id: download-artifact
        with:
          script: |
            const fs = require('fs');

            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            const artifact = artifacts.data.artifacts.find((artifact) => {
              return artifact.name == 'snapshots'
            });

            if (artifact) {
              const download = await github.rest.actions.downloadArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: artifact.id,
                archive_format: 'zip',
              });
              fs.writeFileSync('${{github.workspace}}/.playwright/snapshots/snapshots.zip', Buffer.from(download.data));
              return true;
            }
            return false;
      - run: unzip .playwright/snapshots/snapshots.zip
      # - name: Generate token
        # id: generate_token
        # uses: tibdex/github-app-token@v1
        # with:
          # app_id: ${{ secrets.APP_ID }}
          # private_key: ${{ secrets.PRIVATE_KEY }}
      # - uses: stefanzweifel/git-auto-commit-action@v4
        # with:
          # commit_message: 'test(vrt): update snapshots'
      - name: Remove label
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            const { ISSUE_NUMBER, LABEL_NAME } = process.env;
            const { data: labels } = github.rest.issues.listLabelsOnIssue({
              owner: 'joshblack',
              repo: 'vrt-workflow-experiment',
              issue_number: ISSUE_NUMBER,
            });
            const label = labels.find((label) => {
              return label.name === LABEL_NAME;
            });
            if (label) {
              await github.rest.issues.removeLabel({
                owner: 'joshblack',
                repo: 'vrt-workflow-experiment',
                issue_number: ISSUE_NUMBER,
              });
            }
        env:
          ISSUE_NUMBER: ${{ github.context.issue.number }}
          LABEL_NAME: 'approve changes'

