name: push-snapshots-to-branch
on:
  workflow_run:
    workflows: [update-snapshots]
    types:
      - completed

permissions: {}

jobs:
  pull-request:
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    outputs:
      number: ${{ steps.pr.outputs.number }}
      ref: ${{ steps.pr.outputs.head-ref }}
    steps:
      - name: 'Get Pull Request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');

            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{ github.event.workflow_run.id }},
            });
            const artifact = artifacts.data.artifacts.find((artifact) => {
              return artifact.name == 'pull-request'
            });

            const download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: artifact.id,
              archive_format: 'zip',
            });
            fs.writeFileSync('${{github.workspace}}/PR.zip', Buffer.from(download.data));
      - run: |
          mkdir PR
          unzip PR.zip -d PR
      - uses: actions/github-script@v6
        id: pr
        with:
          script: |
            const fs = require('fs');
            const number = Number(fs.readFileSync('./PR/number', 'utf8'), 10);
            const ref = fs.readFileSync('./PR/head_ref', 'utf8');
            
            core.setOutput('number', number);
            core.setOutput('head-ref', ref);

  commit-and-push:
    needs: pull-request
    runs-on: ubuntu-latest
    permissions: 
      contents: write
    steps:
      - name: 'Download artifact'
        uses: actions/github-script@v6
        id: download-artifact
        with:
          script: |
            const fs = require('fs');

            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{ github.event.workflow_run.id }},
            });
            const artifact = artifacts.data.artifacts.find((artifact) => {
              return artifact.name == 'snapshots'
            });

            const download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: artifact.id,
              archive_format: 'zip',
            });
            fs.writeFileSync('${{github.workspace}}/snapshots.zip', Buffer.from(download.data));
      - run: |
          mkdir snapshots
          unzip -o snapshots.zip -d snapshots
      # Warning: we are checking out an untrusted source at this point in order
      # to push to the head pull request. Code from this checkout must not be
      # used in any of the following steps.
      - uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ needs.pull-request.outputs.ref }}
      - run: |
          rm -rf .playwright/snapshots
          mv snapshots .playwright/snapshots
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'test(vrt): update snapshots'

  remove-labels:
    needs: [commit-and-push, pull-request]
    if: always()
    runs-on: ubuntu-latest
    permissions: 
      pull-requests: write
    steps:
      - name: Remove label
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const { ISSUE_NUMBER, LABEL_NAME } = process.env;
            const { data: labels } = await github.rest.issues.listLabelsOnIssue({
              owner: 'joshblack',
              repo: 'vrt-workflow-experiment',
              issue_number: ISSUE_NUMBER,
            });
            const label = labels.find((label) => {
              return label.name === LABEL_NAME;
            });
            if (label) {
              await github.rest.issues.removeLabel({
                owner: 'joshblack',
                repo: 'vrt-workflow-experiment',
                name: LABEL_NAME,
                issue_number: ISSUE_NUMBER,
              });
            }
        env:
          ISSUE_NUMBER: ${{ needs.pull-request.outputs.number }}
          LABEL_NAME: 'approve changes'
